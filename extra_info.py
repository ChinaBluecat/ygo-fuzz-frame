#coding=utf-8

'''
存放所有额外信息
'''

VERSION = 0x1351

NETWORK_SERVER_ID	=0x7428
NETWORK_CLIENT_ID	=0xdef6

NETPLAYER_TYPE_PLAYER1		=0
NETPLAYER_TYPE_PLAYER2		=1
NETPLAYER_TYPE_PLAYER3		=2
NETPLAYER_TYPE_PLAYER4		=3
NETPLAYER_TYPE_PLAYER5		=4
NETPLAYER_TYPE_PLAYER6		=5
NETPLAYER_TYPE_OBSERVER		=7

CTOS_RESPONSE		=0x1
CTOS_UPDATE_DECK	=0x2
CTOS_HAND_RESULT	=0x3
CTOS_TP_RESULT		=0x4
CTOS_PLAYER_INFO	=0x10
CTOS_CREATE_GAME	=0x11
CTOS_JOIN_GAME		=0x12
CTOS_LEAVE_GAME		=0x13
CTOS_SURRENDER		=0x14
CTOS_TIME_CONFIRM	=0x15
CTOS_CHAT		=0x16
CTOS_HS_TODUELIST	=0x20
CTOS_HS_TOOBSERVER	=0x21
CTOS_HS_READY		=0x22
CTOS_HS_NOTREADY	=0x23
CTOS_HS_KICK		=0x24
CTOS_HS_START		=0x25
CTOS_REQUEST_FIELD	=0x30

STOC_GAME_MSG		=0x1
STOC_ERROR_MSG		=0x2
STOC_SELECT_HAND	=0x3
STOC_SELECT_TP		=0x4
STOC_HAND_RESULT	=0x5
STOC_TP_RESULT		=0x6
STOC_CHANGE_SIDE	=0x7
STOC_WAITING_SIDE	=0x8
STOC_CREATE_GAME	=0x11
STOC_JOIN_GAME		=0x12
STOC_TYPE_CHANGE	=0x13
STOC_LEAVE_GAME		=0x14
STOC_DUEL_START		=0x15
STOC_DUEL_END		=0x16
STOC_REPLAY		=0x17
STOC_TIME_LIMIT		=0x18
STOC_CHAT		=0x19
STOC_HS_PLAYER_ENTER	=0x20
STOC_HS_PLAYER_CHANGE	=0x21
STOC_HS_WATCH_CHANGE	=0x22
STOC_FIELD_FINISH	=0x30
# 这里做一个索引快速查找
STOC_dict = {
STOC_GAME_MSG       :'STOC_GAME_MSG',
STOC_ERROR_MSG      :'STOC_ERROR_MSG',
STOC_SELECT_HAND    :'STOC_SELECT_HAND',
STOC_SELECT_TP      :'STOC_SELECT_TP',
STOC_HAND_RESULT    :'STOC_HAND_RESULT',
STOC_TP_RESULT      :'STOC_TP_RESULT',
STOC_CHANGE_SIDE    :'STOC_CHANGE_SIDE',
STOC_WAITING_SIDE   :'STOC_WAITING_SIDE',
STOC_CREATE_GAME    :'STOC_CREATE_GAME',
STOC_JOIN_GAME		:'STOC_JOIN_GAME',
STOC_TYPE_CHANGE	:'STOC_TYPE_CHANGE',
STOC_LEAVE_GAME		:'STOC_LEAVE_GAME',
STOC_DUEL_START		:'STOC_DUEL_START',
STOC_DUEL_END		:'STOC_DUEL_END',
STOC_REPLAY         :'STOC_REPLAY',
STOC_TIME_LIMIT		:'STOC_TIME_LIMIT',
STOC_CHAT           :'STOC_CHAT',
STOC_HS_PLAYER_ENTER	:'STOC_HS_PLAYER_ENTER',
STOC_HS_PLAYER_CHANGE	:'STOC_HS_PLAYER_CHANGE',
STOC_HS_WATCH_CHANGE	:'STOC_HS_WATCH_CHANGE',
STOC_FIELD_FINISH	:'STOC_FIELD_FINISH',
}

PLAYERCHANGE_OBSERVE	=0x8
PLAYERCHANGE_READY	=0x9
PLAYERCHANGE_NOTREADY	=0xa
PLAYERCHANGE_LEAVE	=0xb

ERRMSG_JOINERROR	=0x1
ERRMSG_DECKERROR	=0x2
ERRMSG_SIDEERROR	=0x3
ERRMSG_VERERROR		=0x4

DECKERROR_LFLIST	=0x1
DECKERROR_OCGONLY	=0x2
DECKERROR_TCGONLY	=0x3
DECKERROR_UNKNOWNCARD	=0x4
DECKERROR_CARDCOUNT	=0x5
DECKERROR_MAINCOUNT	=0x6
DECKERROR_EXTRACOUNT	=0x7
DECKERROR_SIDECOUNT 	=0x8

MODE_SINGLE		=0x0
MODE_MATCH		=0x1
MODE_TAG		=0x2

DUEL_STAGE_BEGIN        =0
DUEL_STAGE_FINGER   	=1
DUEL_STAGE_FIRSTGO  	=2
DUEL_STAGE_DUELING  	=3
DUEL_STAGE_SIDING   	=4
DUEL_STAGE_END	    	=5


deck_buf = b'' + \
b"\x37\x00\x00\x00\x0d\x00\x00\x00\x5a\x64\xb1\x05\xd2" + \
b"\x01\xd5\x00\x1b\x00\x4f\x01\x27\x79\x2f\x00\x3a\xe6\x6d\x04\x3a" + \
b"\xe6\x6d\x04\x3a\xe6\x6d\x04\x6d\xc9\x0a\x00\x14\xdc\x87\x00\xaf" + \
b"\x23\xde\x00\xaf\x23\xde\x00\x06\x13\x4f\x04\x06\x13\x4f\x04\x2a" + \
b"\x95\x65\x01\x2a\x95\x65\x01\x2a\x95\x65\x01\xd2\xa9\xad\x02\x97" + \
b"\x6e\xb3\x04\x97\x6e\xb3\x04\xf6\x2b\x36\x02\xf6\x2b\x36\x02\x05" + \
b"\x10\x49\x01\x05\x10\x49\x01\x05\x10\x49\x01\xe1\xe9\xa4\x05\xc0" + \
b"\xa9\x94\x00\xf8\x9f\x94\x03\xf8\x9f\x94\x03\xf8\x9f\x94\x03\xe9" + \
b"\x71\xe9\x05\x90\x06\x23\x00\x90\x06\x23\x00\xee\x25\xfe\x04\xf9" + \
b"\xe8\xf0\x05\x0f\x55\xcb\x05\x3f\x3a\xea\x03\x3f\x3a\xea\x03\x3f" + \
b"\x3a\xea\x03\x41\xdd\x58\x04\x22\x48\x99\x00\x76\xbf\xb5\x03\x27" + \
b"\x5a\xa4\x01\xc1\x1a\x72\x04\x5d\x30\x14\x04\x30\xf5\xf9\x01\xca" + \
b"\x83\x89\x02\xc5\xa9\xa4\x05\x35\xb4\xbe\x04\xce\x02\xcd\x03\xc7" + \
b"\xf8\x4d\x01\xed\x6b\x15\x05\x1a\xde\xa0\x02\xa4\x9a\x2b\x00\xc1" + \
b"\xea\x03\x03\xb4\xdb\x80\x02\xd7\x1a\x9f\x01\xc7\x34\x48\x03\xc7" + \
b"\x34\x48\x03\xc9\x9a\x89\x01\xc9\x9a\x89\x01\xfd\x89\x9c\x05\xfd" + \
b"\x89\x9c\x05\xfa\xdc\x14\x01\x84\x25\x7e\x00\x3e\xa4\x71\x01\x3e" + \
b"\xa4\x71\x01\x3e\xa4\x71\x01\xd4\xc3\x23\x04"

deck_buf = b'' + \
b"\xff\x00\x00\x00\x00\x00\x00\x00" + \
b"\x29\x7f\xbf\x02"
#b"\xff\xff\xff\x7f\x01\x00\x00\x80" + \
# 第一行是mainc和sidec大小, 4字节int型, 但是计算的时候变成了无符号整型进行计算
# 第二行开始是卡组列表, 4字节一张卡的卡片ID, 目前暂时还没查出pdeck的堆空间
# 堆空间有点难找啊=。=, d
#b"\x20\x00\x00\x00\xe0\xff\xff\xff" + \
# 可以了, 最大可以读到2147483647位, 当然肯定是超过范围了, 但是这玩意最远可以都到哪里呢
# 最远到0x55555596c000这个地址, 和0x555555756c2b的dbuf地址相差
